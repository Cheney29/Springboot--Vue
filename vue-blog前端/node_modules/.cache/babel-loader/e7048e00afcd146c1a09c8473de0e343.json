{"remainingRequest":"E:\\java\\java_work\\VUE-Blog\\vue-blog前端\\vue-blog\\node_modules\\babel-loader\\lib\\index.js!E:\\java\\java_work\\VUE-Blog\\vue-blog前端\\vue-blog\\src\\premission.js","dependencies":[{"path":"E:\\java\\java_work\\VUE-Blog\\vue-blog前端\\vue-blog\\src\\premission.js","mtime":1596291922485},{"path":"E:\\java\\java_work\\VUE-Blog\\vue-blog前端\\vue-blog\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"E:\\java\\java_work\\VUE-Blog\\vue-blog前端\\vue-blog\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc29tZSI7CmltcG9ydCByb3V0ZXIgZnJvbSAiLi9yb3V0ZXIiOyAvLyDot6/nlLHliKTmlq3nmbvlvZUg5qC55o2u6Lev55Sx6YWN572u5paH5Lu255qE5Y+C5pWwCgpyb3V0ZXIuYmVmb3JlRWFjaChmdW5jdGlvbiAodG8sIGZyb20sIG5leHQpIHsKICBpZiAodG8ubWF0Y2hlZC5zb21lKGZ1bmN0aW9uIChyZWNvcmQpIHsKICAgIHJldHVybiByZWNvcmQubWV0YS5yZXF1aXJlQXV0aDsKICB9KSkgewogICAgLy8g5Yik5pat6K+l6Lev55Sx5piv5ZCm6ZyA6KaB55m75b2V5p2D6ZmQCiAgICB2YXIgdG9rZW4gPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbSgidG9rZW4iKTsKICAgIGNvbnNvbGUubG9nKCItLS0tLS0tLS0tLS0iICsgdG9rZW4pOwoKICAgIGlmICh0b2tlbikgewogICAgICAvLyDliKTmlq3lvZPliY3nmoR0b2tlbuaYr+WQpuWtmOWcqCDvvJsg55m75b2V5a2Y5YWl55qEdG9rZW4KICAgICAgaWYgKHRvLnBhdGggPT09ICcvbG9naW4nKSB7fSBlbHNlIHsKICAgICAgICBuZXh0KCk7CiAgICAgIH0KICAgIH0gZWxzZSB7CiAgICAgIG5leHQoewogICAgICAgIHBhdGg6ICcvbG9naW4nCiAgICAgIH0pOwogICAgfQogIH0gZWxzZSB7CiAgICBuZXh0KCk7CiAgfQp9KTs="},{"version":3,"sources":["E:/java/java_work/VUE-Blog/vue-blog前端/vue-blog/src/premission.js"],"names":["router","beforeEach","to","from","next","matched","some","record","meta","requireAuth","token","localStorage","getItem","console","log","path"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,UAAnB,C,CAEA;;AACAA,MAAM,CAACC,UAAP,CAAkB,UAACC,EAAD,EAAKC,IAAL,EAAWC,IAAX,EAAoB;AAElC,MAAIF,EAAE,CAACG,OAAH,CAAWC,IAAX,CAAgB,UAAAC,MAAM;AAAA,WAAIA,MAAM,CAACC,IAAP,CAAYC,WAAhB;AAAA,GAAtB,CAAJ,EAAwD;AAAE;AAEtD,QAAMC,KAAK,GAAGC,YAAY,CAACC,OAAb,CAAqB,OAArB,CAAd;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAY,iBAAiBJ,KAA7B;;AAEA,QAAIA,KAAJ,EAAW;AAAE;AACT,UAAIR,EAAE,CAACa,IAAH,KAAY,QAAhB,EAA0B,CAEzB,CAFD,MAEO;AACHX,QAAAA,IAAI;AACP;AACJ,KAND,MAMO;AACHA,MAAAA,IAAI,CAAC;AACDW,QAAAA,IAAI,EAAE;AADL,OAAD,CAAJ;AAGH;AACJ,GAhBD,MAgBO;AACHX,IAAAA,IAAI;AACP;AACJ,CArBD","sourcesContent":["import router from \"./router\";\r\n\r\n// 路由判断登录 根据路由配置文件的参数\r\nrouter.beforeEach((to, from, next) => {\r\n\r\n    if (to.matched.some(record => record.meta.requireAuth)) { // 判断该路由是否需要登录权限\r\n\r\n        const token = localStorage.getItem(\"token\")\r\n        console.log(\"------------\" + token)\r\n\r\n        if (token) { // 判断当前的token是否存在 ； 登录存入的token\r\n            if (to.path === '/login') {\r\n\r\n            } else {\r\n                next()\r\n            }\r\n        } else {\r\n            next({\r\n                path: '/login'\r\n            })\r\n        }\r\n    } else {\r\n        next()\r\n    }\r\n})"]}]}